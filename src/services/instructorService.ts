import apiClient from '@/api/client'
import type {
  Homework,
  HomeworkReviewData,
  TextAnswer,
  TextAnswerReviewData,
  HomeworkFilters,
} from '@/types/api'

export const instructorService = {
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –î–ó –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
   */
  async getPendingHomeworks(): Promise<Homework[]> {
    console.log('üì• –ó–∞–ø—Ä–æ—Å –î–ó –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...')
    const response = await apiClient.get('/homework/pending-review/')
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –î–ó –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É:', response.data.results)
    return response.data.results
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –î–ó (—Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π)
   */
  async getAllHomeworks(filters?: HomeworkFilters): Promise<Homework[]> {
    console.log('üì• –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –î–ó...', filters)

    const params = new URLSearchParams()
    if (filters?.status) params.append('status', filters.status)
    if (filters?.course_id) params.append('course_id', filters.course_id.toString())

    const url = params.toString() ? `/homework/?${params}` : '/homework/'
    const response = await apiClient.get(url)

    console.log('üîç –°–´–†–´–ï –î–ê–ù–ù–´–ï –û–¢ API (/homework/):', response.data)

    // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (response.data && response.data.length > 0) {
      console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –î–ó:', {
        id: response.data[0].id,
        user: response.data[0].user,
        lesson: response.data[0].lesson,
        status: response.data[0].status,
        hasUser: !!response.data[0].user,
        hasLesson: !!response.data[0].lesson,
        userStructure: response.data[0].user ? Object.keys(response.data[0].user) : 'NO USER',
        lessonStructure: response.data[0].lesson
          ? Object.keys(response.data[0].lesson)
          : 'NO LESSON',
      })
    }

    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –≤—Å–µ –î–ó:', response.data)
    return response.data
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
   */
  async getPendingTextAnswers(): Promise<TextAnswer[]> {
    console.log('üì• –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...')
    const response = await apiClient.get('/instructor/text-answers/pending/')
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:', response.data.results)
    return response.data.results
  },
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã (—Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏)
   */
  async getAllTextAnswers(filters?: { user_id?: number }): Promise<TextAnswer[]> {
    const response = await apiClient.get('/api/instructor/text-answers/', {
      params: filters,
    })
    return response.data
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
   */
  async getStudentTextAnswers(userId: number): Promise<TextAnswer[]> {
    const response = await apiClient.get(`/api/instructor/text-answers/student/${userId}/`)
    return response.data
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
   */
  async reviewHomework(homeworkId: number, reviewData: HomeworkReviewData): Promise<Homework> {
    console.log(`üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –î–ó ${homeworkId}:`, reviewData)

    const response = await apiClient.patch(`/homework/${homeworkId}/`, reviewData)
    console.log('‚úÖ –î–ó –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ:', response.data)
    return response.data
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
   */
  async reviewTextAnswer(answerId: number, reviewData: TextAnswerReviewData): Promise<void> {
    const response = await apiClient.patch(
      `/api/instructor/text-answers/${answerId}/review/`,
      reviewData,
    )
    console.log('‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω:', response.data)
    return response.data
  },
}

export default instructorService
