import apiClient from '@/api/client'
import type {
  Homework,
  HomeworkReviewData,
  TextAnswer,
  TextAnswerReviewData,
  HomeworkFilters,
} from '@/types/api'

// –¢–∏–ø –¥–ª—è –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
interface PaginatedResponse<T> {
  count: number
  results: T[]
}

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
 */
export const instructorService = {
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –î–ó –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
   */
  async getPendingHomeworks(): Promise<Homework[]> {
    const response = await apiClient.get('/instructor/homeworks/pending/')
    return response.data
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –î–ó (—Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏)
   */
  async getAllHomeworks(filters?: HomeworkFilters): Promise<Homework[]> {
    const response = await apiClient.get('/instructor/homeworks/', {
      params: filters,
    })
    return response.data
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
   */
  async getPendingTextAnswers(): Promise<TextAnswer[]> {
    console.log('üì• –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...')
    const response = await apiClient.get<PaginatedResponse<TextAnswer>>(
      '/instructor/text-answers/pending/',
    )
    console.log('üìã –û—Ç–≤–µ—Ç –æ—Ç API (pending):', response.data)

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª—è results
    const answers = response.data.results || []
    console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ ${answers.length} –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É`)
    return answers
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã (—Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏)
   */
  async getAllTextAnswers(filters?: { user_id?: number }): Promise<TextAnswer[]> {
    console.log('üîç –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', filters)
    console.log('üåê BaseURL:', apiClient.defaults.baseURL)

    const response = await apiClient.get<PaginatedResponse<TextAnswer>>(
      '/instructor/text-answers/',
      {
        params: filters,
      },
    )

    console.log('üìã –û—Ç–≤–µ—Ç –æ—Ç API (all):', response.data)

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª—è results
    const answers = response.data.results || []
    console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ ${answers.length} –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤`)
    return answers
  },

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
   */
  async getStudentTextAnswers(userId: number): Promise<TextAnswer[]> {
    console.log(`üì• –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ ${userId}...`)
    const response = await apiClient.get<PaginatedResponse<TextAnswer>>(
      `/instructor/text-answers/student/${userId}/`,
    )
    console.log('üìã –û—Ç–≤–µ—Ç –æ—Ç API (student):', response.data)

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª—è results
    const answers = response.data.results || []
    console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ ${answers.length} –æ—Ç–≤–µ—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞`)
    return answers
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
   */
  async reviewHomework(homeworkId: number, reviewData: HomeworkReviewData): Promise<Homework> {
    const response = await apiClient.patch(`/instructor/homeworks/${homeworkId}/`, reviewData)
    return response.data
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
   */
  async reviewTextAnswer(answerId: number, reviewData: TextAnswerReviewData): Promise<void> {
    const response = await apiClient.patch(
      `/instructor/text-answers/${answerId}/review/`,
      reviewData,
    )
    return response.data
  },
}
