import apiClient from '@/api/client'
import type { Homework, HomeworkSubmission } from '@/types/api'

export const homeworkService = {
  // –ü–æ–ª—É—á–∏—Ç—å –î–ó –¥–ª—è —É—Ä–æ–∫–∞
  async getHomeworkForLesson(lessonId: number): Promise<Homework | null> {
    try {
      const response = await apiClient.get(`/homework/lesson/${lessonId}/`)
      return response.data || null
    } catch (error) {
      console.error(`Error fetching homework for lesson ${lessonId}:`, error)
      return null
    }
  },

  // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –î–ó
  async submitHomework(submission: HomeworkSubmission): Promise<Homework> {
    const formData = new FormData()

    formData.append('lesson', submission.lesson_id.toString())
    formData.append('comment', submission.comment)

    submission.files.forEach((file) => {
      formData.append(`files`, file)
    })

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –î–ó —Å —Ñ–∞–π–ª–∞–º–∏:', submission.files.length)

    const response = await apiClient.post('/homework/', formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    })
    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data)
    return response.data
  },

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –î–ó
  async addFilesToHomework(homeworkId: number, files: File[]): Promise<Homework> {
    const formData = new FormData()

    files.forEach((file) => {
      formData.append(`files`, file)
    })

    const response = await apiClient.patch(`/homework/${homeworkId}/add_files/`, formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    })

    return response.data
  },

  // –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –î–ó
  async createOrUpdateHomework(submission: HomeworkSubmission): Promise<Homework> {
    try {
      // –í–°–ï–ì–î–ê –°–û–ó–î–ê–ï–ú –ù–û–í–û–ï –î–ó (–Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ)
      return await this.submitHomework(submission)
    } catch (error) {
      console.error('Error in createOrUpdateHomework:', error)
      throw error
    }
  },
}
