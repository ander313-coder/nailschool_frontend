import apiClient from '@/api/client';
import type { Course, Lesson } from '@/types/api';

export const courseService = {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã
  async getCourses(): Promise<Course[]> {
    try {
      const response = await apiClient.get('/courses/');
      return response.data.results || response.data;
    } catch (error) {
      console.error('Error fetching courses:', error);
      throw error;
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞ –ø–æ ID
  async getCourse(id: number): Promise<Course> {
    try {
      const response = await apiClient.get(`/courses/${id}/`);
      return response.data;
    } catch (error) {
      console.error(`Error fetching course ${id}:`, error);
      throw error;
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞
  async getCourseLessons(courseId: number): Promise<Lesson[]> {
    try {
      const response = await apiClient.get(`/courses/${courseId}/lessons/`);
      return response.data.results || response.data;
    } catch (error) {
      console.error(`Error fetching lessons for course ${courseId}:`, error);
      throw error;
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫—É—Ä—Å—É
  // –£–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  async getCourseProgress(courseId: number, totalLessons: number = 0): Promise<any> {
    try {
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å —Å–µ—Ä–≤–µ—Ä–∞
      const response = await apiClient.get(`/courses/${courseId}/progress/`);
      return response.data;
    } catch (error: any) {
      // –ï—Å–ª–∏ endpoint –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
      if (error.response?.status === 404) {
        console.log(`üìä Progress endpoint not found, calculating locally for course ${courseId}`);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
        // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        return {
          completed_lessons: 0,
          total_lessons: totalLessons,
          progress_percent: 0
        };
      }
      throw error;
    }
  }
};
